---
title: Data
description: Description of our two datasets' sources, along with data exploration and cleaning processes for our analysis.
toc: true
draft: false
editor: 
  markdown: 
    wrap: sentence
---
![](images/DataPageImage.png)

# Describe where/how to find data

Both datasets comes from [IPUMS USA](https://usa.ipums.org/usa/index.shtml).

> Reference: Steven Ruggles, Sarah Flood, Matthew Sobek, Daniel Backman, Annie Chen, Grace Cooper, Stephanie Richards, Renae Rodgers, and Megan Schouweiler.
> IPUMS USA: Version 15.0 \[dataset\].
> Minneapolis, MN: IPUMS, 2024.
> https://doi.org/10.18128/D010.V15.0

The original data of this website came from censuses as well as the American Community Surveys (ACS) that began in 2000 and are still going on today.

The datasets were chosen from IPUMS because this website contains datasets that are large, valid and complex, containing detailed microdata, which aims to facilitate transformative research, education, and policy-making by aggregating data across times and places.
It makes the datasets on this website very appropriate for our research to streamline our analysis of changes, data merging, and comparative research.

# Datasets detail

## First Dataset (YEAR of 2022)

Here is the link to our cleaned dataset [cleaned dataset.](./dataset//latest_clean.csv)
Here is the link to the class blog which includes the code for cleaning, recording, and processing the dataset. To replicate the process, [click this link](posts/2024-03-23-class-blog-2/class-blog-2.qmd)

### Table contains all the variables in the dataset

-   Highlighted all key dependent variables (RENTGRS) and independent variables (INCTOT) in bold, as well as the logarithm of them.

| Variable          | Description                            |
|-------------------|----------------------------------------|
| **INCTOT**        | Total personal income                  |
| **log_INCTOT**    | Logarithm of total personal income     |
| **log_RENTGRS**   | Logarithm of monthly gross rent        |
| **RENTGRS**       | Monthly gross rent                     |
| REGION            | Geographical region                    |
| YEAR              | Year in which the data was collected   |
| KITCHEN           | Kitchen or cooking facilities          |
| ROOMS             | Number of rooms                        |
| NFAMS             | Number of families in household        |
| AGE               | Age of the individual or building      |
| MARST             | Marital status                         |
| RACE              | Race of the individual                 |
| RACED             | Detailed categorization of race        |
| EMPSTAT           | Employment status                      |
| EMPSTATD          | Detailed categorization of employment  |
| FTOTINC           | Total family income                    |
| POVERTY           | Poverty level                          |
| REGION_CLASSIFIED | Classified region categorization       |
| Fam_income        | Alternative variable for family income |

### Clean or recoding

#### Raw processing

-   Dependent variable—**rent**— Exclude the records indicating a **rent of 0**.

    -   This exclusion is based on the understanding that a 0 rent suggests the individual owns their home or lives in a situation not pertinent to our target research population, which is individuals who rent their housing.

-   Variable **KITCHEN** has characteristic that over 95% of houses possess a kitchen, diminishing its analytical value.
    Therefore, should consider to exclude this variable while the modeling.

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyr)
library(broom)
library(dplyr)
library(here)
library(gt)
library(purrr)
data_path <- here("dataset", "data_twenty_clean.csv")
data_path1 <- here("dataset", "latest_clean.csv")
data_path_2 <- here("dataset", "latest.csv")
library(readr)
data_twenty <- read_csv(data_path,show_col_types = FALSE) 
data_2022 <- read_csv(data_path1,show_col_types = FALSE) 
rent_data_clean <- read_csv(data_path1,show_col_types = FALSE) 
library(ggplot2)
library(knitr)
library(lme4)
library(broom.mixed)
kitchen_counts <- data_2022 %>%
  group_by(KITCHEN) %>%
  summarise(Count = n()) %>%
  mutate(Percentage = Count / sum(Count) * 100)
ggplot(kitchen_counts, aes(x = "", y = Count, fill = factor(KITCHEN))) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  theme_void() +
  geom_text(aes(label = sprintf("%1.1f%%", Percentage)), position = position_stack(vjust = 0.5)) +
  labs(title = "Pie Chart of Kitchen",fill = "Number of Kitchens")
```

-   Exclude data entries characterized by specific codes indicative of **missing or unknown values**, as well as those representing values deemed inappropriate for analytical purposes. Given the vast size of the original dataset, which includes millions of records, we opted to remove the rows with these missing values directly.This decision does not compromise our ability to conduct a thorough analysis, as the remaining dataset is still large and clean enough for reliable and robust research conclusions.Removed categories are summarized under the following table.

##### Table of Variables with Missing Value Codes for Each Category

| Variable     | Description                   | Notes                                                        |
|--------------|-------------------------------|--------------------------------------------------------------|
| **INCTOT**   | Total personal income         | Specific codes detailed below:                               |
|              |                               | 0000001 = \$1 or break even (2000, 2005-onward ACS and PRCS) |
|              |                               | 9999999 = N/A                                                |
|              |                               | 9999998 = Unknown                                            |
| **FTOTINC**  | Total family income           | Specific codes detailed below:                               |
|              |                               | -000001 = Net loss (1950)                                    |
|              |                               | 9999998 = Not ascertained (1950)                             |
|              |                               | 9999999 = N/A                                                |
| **KITCHEN**  | Kitchen or cooking facilities | 0 = N/A                                                      |
| **ROOMS**    | Number of rooms               | 00 = N/A                                                     |
| **EMPSTATA** | Employment status             | Specific codes detailed below:                               |
|              |                               | 0 = Missing value                                            |
|              |                               | 9 = Unknown/Illegible                                        |
| **STATE**    | Geographic state identifier   | Specific codes detailed below:                               |
|              |                               | 91 = Overseas Military/Military Installations                |
|              |                               | 92 = PUMA boundaries cross state lines - Metro sample        |
|              |                               | 97 = State not identified                                    |
|              |                               | 99 = Not identified                                          |

#### Recode some categorical data

-   Recode and modified certain variables in the dataset that are encoded with specific numerical codes, which reflect categories or qualitative information rather than quantitative values. Recoded categories are summarized under the following table.

##### Table of Categorical Variables with Numerical Codes as Categories

| Variable    | Description                    | Notes                                      |
|-------------|--------------------------------|--------------------------------------------|
| **INCTOT**  | Total personal income          | Specific codes detailed below:             |
|             |                                | -009995 = -\$9,900 (1980)                  |
|             |                                | -000001 = Net loss (1950)                  |
|             |                                | FTOTINC-000001 = Net loss (1950)           |
| **KITCHEN** | Kitchen facilities             | 0 = N/A                                    |
|             |                                | 1 = No                                     |
|             |                                | 2 = No, or shared use                      |
|             |                                | 3 = Yes, shared use                        |
|             |                                | 4 = Yes (shared or exclusive use)          |
|             |                                | 5 = Yes, exclusive use                     |
| **MARST**   | Marital status                 | 1 = Married, spouse present                |
|             |                                | 2 = Married, spouse absent                 |
|             |                                | 3 = Separated                              |
|             |                                | 4 = Divorced                               |
|             |                                | 5 = Widowed                                |
|             |                                | 6 = Never married/single                   |
|             |                                | 9 = Blank, missing                         |
| **RACE**    | Race                           | 1 = White                                  |
|             |                                | 2 = Black/African American                 |
|             |                                | 3 = American Indian or Alaska Native       |
|             |                                | 4 = Chinese                                |
|             |                                | 5 = Japanese                               |
|             |                                | 6 = Other Asian or Pacific Islander        |
|             |                                | 7 = Other race, nec                        |
|             |                                | 8 = Two major races                        |
|             |                                | 9 = Three or more major races              |
| **EMPSTAT** | Employment status              | 1 = Employed                               |
|             |                                | 2 = Unemployed                             |
|             |                                | 3 = Not in the labor force                 |
| **REGION**  | Geographic region and division | Specific codes detailed below:             |
|             |                                | 11 = New England Division (Northeast)      |
|             |                                | 12 = Middle Atlantic Division (Northeast)  |
|             |                                | 13 = Mixed Northeast Divisions (Northeast) |
|             |                                | 21 = East North Central Division (Midwest) |
|             |                                | 22 = West North Central Division (Midwest) |
|             |                                | 23 = Mixed Midwestern Divisions (Midwest)  |
|             |                                | 31 = South Atlantic Division (South)       |
|             |                                | 32 = East South Central Division (South)   |
|             |                                | 33 = West South Central Division (South)   |
|             |                                | 34 = Mixed Southern Divisions (South)      |
|             |                                | 41 = Mountain Division (West)              |
|             |                                | 42 = Pacific Division (West)               |
|             |                                | 43 = Mixed Western Divisions (West)        |

#### Advanced Processing during the modeling

-   The **logarithm of both INCTOT and RENTGRS** was computed due to their highly right-skewed distributions. Since applying the logarithmic transformation, we also excluded any records with **negative values** in these variables.

#### RENTGRS (rent)
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=5}
library(gridExtra)

p1 <- ggplot(rent_data_clean, aes(x = RENTGRS)) +
  geom_histogram(binwidth = 100, fill = "lightblue", color = "blue") +
  labs(title = "Distribution of Monthly Gross Rent",
       x = "Monthly Gross Rent ($)",
       y = "Count") +
  theme_minimal()

# The log_RENTGRS plot
p2 <- ggplot(data_2022, aes(x = log(RENTGRS))) +
  geom_histogram(binwidth = 0.1, fill = "lightblue", color = "blue") + 
  labs(title = "Distribution of Log of Monthly Gross Rent",
       x = "Log of Monthly Gross Rent",
       y = "Count") +
  theme_minimal()

# Arrange the plots side by side
grid.arrange(p1, p2, ncol = 2)
```

##### INCTOT (income)
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=5}

# The histogram of Total Personal Income
p1 <- ggplot(rent_data_clean, aes(x = INCTOT)) +
  geom_histogram(bins = 100, fill = "lightblue", color = "blue") +
  theme_minimal() +
  labs(title = "Histogram of Total Personal Income",
       x = "Total Personal Income",
       y = "Frequency")

# The log_INCTOT plot
p2 <- ggplot(data_2022, aes(x = log(INCTOT))) +
  geom_histogram(bins = 100, fill = "lightblue", color = "blue") + 
  theme_minimal() +
  labs(title = "Histogram of Log of Total Personal Income",
       x = "Log of Total Personal Income",
       y = "Frequency")

# Arrange the plots side by side
grid.arrange(p1, p2, ncol = 2)
```


The log transformation of both variables significantly reduced their skewness.

-   Exclude the **outliers** three standard deviations from the mean.

##### The following plots shows the problem of outliers in our key predictor and response variable

```{r echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=4}
data_path <- here("dataset", "latest.csv")
rent <- read_csv(data_path,show_col_types = FALSE) 
rent <- rent[rent$RENTGRS > 0 & rent$INCTOT > 0, ]

# Apply log transformation
rent$log_RENTGRS <- log(rent$RENTGRS)
rent$log_INCTOT <- log(rent$INCTOT)

enhanced_model_augmented <- lm(log_RENTGRS ~ log_INCTOT + KITCHEN + ROOMS + NFAMS + AGE + MARST + RACE + EMPSTAT + REGION_CLASSIFIED, data = rent)

p1=ggplot(enhanced_model_augmented, aes(x = log_INCTOT, y = log_RENTGRS)) + stat_density2d_filled() + scale_x_log10() + scale_y_log10()

p2=ggplot(enhanced_model_augmented, aes(x = log_INCTOT, y = log_RENTGRS)) + geom_point(alpha =.05) + scale_x_log10() + scale_y_log10()
grid.arrange(p1, p2, nrow = 1, widths = c(0.6, 0.4))
```

-   The first density plot shows a wide spread with some points far from the main cluster, indicative of outliers.
    It proves there are a lot of outliers sparsely packed and are visible on the fringes of the plot.

-   The second plot indicates these outliers might possibly disproportionately affect the slope and intercept of our regression line as we fit in the regression models.

-   After the consideration that the outliers do not reflect the typical relationship, we exclude all the outliers that are not within the three standard deviations' range.

##### The following tables shows what happened **after** exclude the outliers of our key predictor and response variable


```{r echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=4}
data_2022 <- data_2022[data_2022$RENTGRS > 0 & data_2022$INCTOT > 0, ]

data_2022$log_RENTGRS <- log(data_2022$RENTGRS)
data_2022$log_INCTOT <- log(data_2022$INCTOT)


mean_log_RENTGRS <- mean(data_2022$log_RENTGRS, na.rm = TRUE)
sd_log_RENTGRS <- sd(data_2022$log_RENTGRS, na.rm = TRUE)
mean_log_INCTOT <- mean(data_2022$log_INCTOT, na.rm = TRUE)
sd_log_INCTOT <- sd(data_2022$log_INCTOT, na.rm = TRUE)

lb_log_RENTGRS <- mean_log_RENTGRS - 3 * sd_log_RENTGRS
ub_log_RENTGRS <- mean_log_RENTGRS + 3 * sd_log_RENTGRS
lb_log_INCTOT <- mean_log_INCTOT - 3 * sd_log_INCTOT
ub_log_INCTOT <- mean_log_INCTOT + 3 * sd_log_INCTOT
data_2022_clean <- data_2022[data_2022$log_RENTGRS >= lb_log_RENTGRS & data_2022$log_RENTGRS <= ub_log_RENTGRS & 
                             data_2022$log_INCTOT >= lb_log_INCTOT & data_2022$log_INCTOT <= ub_log_INCTOT, ]

log_model_2022 <- lm(log_RENTGRS ~ log_INCTOT + KITCHEN + ROOMS + NFAMS + AGE + MARST + RACE + EMPSTAT + REGION_CLASSIFIED, data = data_2022_clean)


p2=ggplot(log_model_2022, aes(x = log_INCTOT, y = log_RENTGRS)) + geom_point(alpha =.05) + scale_x_log10() + scale_y_log10()

p1=ggplot(log_model_2022, aes(x = log_INCTOT, y = log_RENTGRS)) + stat_density2d_filled() + scale_x_log10() + scale_y_log10()
grid.arrange(p1, p2, nrow = 1, widths = c(0.6, 0.4))
```


-   The density plot is to show a tighter concentration of data, with less dispersion.

-   The scatter plot present a clearer pattern and a trend with fewer extreme points that can distort the regression line.

## Second Dataset (Merged YEAR of 2000 to 2022)

Here is the link to our cleaned dataset [cleaned dataset.](./datasdata_twenty_clean.csv)

-   The dataset includes identical variables as the first dataset, with the exception of the "YEAR" variable, which spans from 2000 to 2022.

-   The cleaning and processing of these datasets adhered to the same methodology utilized for the 2022 dataset, as outlined earlier.

-   Given the extensive size of the census and ACS datasets, a 1% random sample was extracted for analysis.

-   The range of years provided was utilized to perform a time series regression analysis.

## Summary of numerical variables (2022)

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyr)
library(forcats)
library(gt)
library(dplyr)
data_path <- here("dataset", "data_twenty_clean.csv")
data_path1 <- here("dataset", "latest_clean.csv")
data_twenty <- read_csv(data_path,show_col_types = FALSE) 
data_2022 <- read_csv(data_path1,show_col_types = FALSE) 
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
summary_data <- data_2022 %>%
  summarise(across(c(RENTGRS, ROOMS, AGE, FTOTINC, POVERTY,INCTOT,NFAMS),
                   list(Mean = ~mean(.x),
                        Median = ~median(.x),
                        Min = ~min(.x),
                        Max = ~max(.x)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = "summary",
               values_to = "value") %>%
  separate(summary, into = c("variable", "statistic"), sep = "_") %>%
  pivot_wider(names_from = "statistic", values_from = "value") %>%
  select(variable, Mean, Median, Min, Max)
summary_data %>%
  gt() %>%
  tab_header(
    title = "Summary Statistics for Rental Data (2000)",
    subtitle = "Includes mean, median, minimum, and maximum values"
  ) %>%
  cols_label(
    variable = "Variable",
    Mean = "Mean",
    Median = "Median",
    Min = "Minimum",
    Max = "Maximum"
  ) %>%
  fmt_number(
    columns = c("Mean", "Median", "Min", "Max"),
    decimals = 2
  ) %>%
  tab_options(
    table.font.size = px(12),
    heading.title.font.size = px(16),
    heading.subtitle.font.size = px(12)
  )
```

## Summary of categorical variables (2002)

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyr)
library(purrr)
library(kableExtra)
categorical_vars <- c("KITCHEN", "MARST", "RACE", "EMPSTAT", "REGION_CLASSIFIED")

category_summaries <- map(categorical_vars, function(var) {
  data_2022 %>%
    count(!!sym(var)) %>%
    rename(Levels = !!sym(var), Frequency = n) %>%
    mutate(Variable = var)
})

combined_summary_table <- bind_rows(category_summaries) %>%
  select(Variable, Levels, Frequency)

kable(combined_summary_table)
```

## Summary of numerical variables (2000-2022)

```{r echo=FALSE, message=FALSE, warning=FALSE}
summary_data <- data_twenty %>%
  summarise(across(c(RENTGRS, ROOMS, AGE, FTOTINC, POVERTY,INCTOT,NFAMS),
                   list(Mean = ~mean(.x),
                        Median = ~median(.x),
                        Min = ~min(.x),
                        Max = ~max(.x)),
                   .names = "{.col}_{.fn}")) %>%
  pivot_longer(cols = everything(),
               names_to = "summary",
               values_to = "value") %>%
  separate(summary, into = c("variable", "statistic"), sep = "_") %>%
  pivot_wider(names_from = "statistic", values_from = "value") %>%
  select(variable, Mean, Median, Min, Max)
summary_data %>%
  gt() %>%
  tab_header(
    title = "Summary Statistics for Rental Data (2000-2022)",
    subtitle = "Includes mean, median, minimum, and maximum values"
  ) %>%
  cols_label(
    variable = "Variable",
    Mean = "Mean",
    Median = "Median",
    Min = "Minimum",
    Max = "Maximum"
  ) %>%
  fmt_number(
    columns = c("Mean", "Median", "Min", "Max"),
    decimals = 2
  ) %>%
  tab_options(
    table.font.size = px(12),
    heading.title.font.size = px(16),
    heading.subtitle.font.size = px(12)
  )
```

## Summary of categorical variables (2000-2022)

```{r echo=FALSE, message=FALSE, warning=FALSE}
categorical_vars <- c("KITCHEN", "MARST", "RACE", "EMPSTAT", "REGION_CLASSIFIED")

category_summaries <- map(categorical_vars, function(var) {
  data_twenty %>%
    count(!!sym(var)) %>%
    rename(Levels = !!sym(var), Frequency = n) %>%
    mutate(Variable = var)
})

combined_summary_table <- bind_rows(category_summaries) %>%
  select(Variable, Levels, Frequency)

kable(combined_summary_table)
```

## Extra Library Used in Analysis 
1. `purrr`: Used in preprocessing for regression analysis.
2. `lme4`: Used in fitting and analyzing mixed-effects models, useful for regression models involving random effects.
3. `broom.mixed`: Tidy outputs from mixed-effects models.
4. `nlme`: Fit and compare Gaussian nonlinear mixed-effects models.
5. `car`: Provides advanced data handling and visualization functions for regression models.
6. `shiny`: Allows for building interactive web apps to display regression model analyses.
7. `DT`: Useful for displaying regression model outputs interactively.
8. `knitr`: Enables the regression model summaries in report formats.
9. `kableExtra`: Enhances `knitr`'s `kable()` function, allowing for the creation of complex tables to present regression model summaries.

10. `tigris`: Useful for downloading and using geographical data that can be incorporated into regression models analyzing spatial data.
11. `sf`: Provides simple features access for manipulating, analyzing, and visualizing geographic data, important for spatial regression modeling.
12. `leaflet`: Enables the creation of interactive maps to visually represent results from spatial regression analyses.
