---
title: "Class blog 6"
author: "Yating Zhu"
date: "2024-04-17"
date-modified: "2024-04-17"
draft: FALSE
---
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyr)
library(broom)
library(dplyr)
library(here)
library(gt)
library(purrr)
data_path <- here("dataset", "data_twenty_clean.csv")
data_path1 <- here("dataset", "latest_clean.csv")
library(readr)
data_twenty <- read_csv(data_path,show_col_types = FALSE) 
data_2022 <- read_csv(data_path1,show_col_types = FALSE) 
library(ggplot2)
library(knitr)
```
## Group BY Race, see coefficients changes over years and races

### Year 2022
- Confirmed that RACE is a factor and has at least two levels. 
```{r echo=FALSE, message=FALSE, warning=FALSE}
data_2022$RACE <- factor(data_2022$RACE)
if (length(levels(data_2022$RACE)) < 2) {
  stop("RACE must have at least two levels")
}
```
- Identifying and removing groups where any of the specified categorical variables have only one level within each racial category, potentially indicating insufficient variability for statistical analysis.
```{r echo=FALSE, message=FALSE, warning=FALSE}
# Convert categorical variables to factors
categorical_vars <- c("KITCHEN", "MARST", "EMPSTAT", "REGION_CLASSIFIED")
data_2022[categorical_vars] <- lapply(data_2022[categorical_vars], factor)

# Convert categorical variables to factors
categorical_vars <- c("KITCHEN", "MARST", "EMPSTAT", "REGION_CLASSIFIED")
data_2022[categorical_vars] <- lapply(data_2022[categorical_vars], factor)

# Check the number of levels per categorical variable within each RACE group
race_levels <- data_2022 %>%
  group_by(RACE) %>%
  summarize(across(all_of(categorical_vars), ~n_distinct(.))) %>%
  ungroup()

# Identify RACE groups with any categorical variable having only one level
races_with_single_levels <- race_levels %>%
  filter(if_any(everything(), ~.x == 1)) %>%
  pull(RACE) # Extract the RACE values with problematic levels

# Filter out the problematic RACE groups from the main dataset
data_2022_filtered <- data_2022 %>%
  filter(!RACE %in% races_with_single_levels)
print(races_with_single_levels)
```
- Table shows the coefficient of each races to the key predictor  
```{r echo=FALSE, message=FALSE, warning=FALSE}
models_by_race <- data_2022_filtered%>%
  group_by(RACE) %>%
  do(
    model = lm(log_RENTGRS ~ log_INCTOT + KITCHEN + ROOMS + NFAMS + AGE + MARST + EMPSTAT + REGION_CLASSIFIED, data = .)
  )

models_summaries <- models_by_race %>%
  rowwise() %>%
  do(
    tidy_model = broom::tidy(.$model)
  )
unnested_models_summaries <- tidyr::unnest(models_summaries, tidy_model)

inctot_coefficients_by_race <- models_by_race %>%
  rowwise() %>%
  summarize(
    RACE = unique(RACE),
    log_INCTOT_Coefficient = coef(model)["log_INCTOT"]
  )
kable(inctot_coefficients_by_race)
```
Analysis to the table:
- The **Chinese** group exhibits the highest log_INCTOT coefficient, indicating the strongest positive association between income and the variable of interest in this dataset.
  
- **American Indian or Alaska Native**, **Other Asian or Pacific Islander**, **Other race, nec**, **Three or more major races**, and **White** categories display coefficients ranging from approximately 0.0376 to 0.1676, suggesting varied degrees of positive association between income and the variable measured.

- The **Black/African American** and **Two major races** groups have relatively lower coefficients of approximately 0.0621 and 0.0882, respectively, implying a weaker positive relationship compared to the other groups.

- There is no negative coefficient present, which would indicate a negative relationship between income and the variable; all listed races have positive coefficients, implying a positive relationship across the board.

### Year 2000-2022
### For each race, how the coefficient change across 2000 to 2022 
- Confimed that RACE is a factor and has at least two levels. 
```{r}
data_twenty$RACE <- factor(data_twenty$RACE)
if (length(levels(data_twenty$RACE)) < 2) {
  stop("RACE must have at least two levels")
}
```

- No need to drop because all has more than one level. 
```{r}
# Convert categorical variables to factors
categorical_vars <- c("KITCHEN", "MARST", "EMPSTAT", "REGION_CLASSIFIED")
data_twenty[categorical_vars] <- lapply(data_twenty[categorical_vars], factor)

# Convert categorical variables to factors
categorical_vars <- c("KITCHEN", "MARST", "EMPSTAT", "REGION_CLASSIFIED")
data_twenty[categorical_vars] <- lapply(data_twenty[categorical_vars], factor)

# Check the number of levels per categorical variable within each RACE group
race_levels <- data_twenty %>%
  group_by(RACE) %>%
  summarize(across(all_of(categorical_vars), ~n_distinct(.))) %>%
  ungroup()

# Identify RACE groups with any categorical variable having only one level
races_with_single_levels <- race_levels %>%
  filter(if_any(everything(), ~.x == 1)) %>%
  pull(RACE) # Extract the RACE values with problematic levels

# Filter out the problematic RACE groups from the main dataset
data_twenty_filtered <- data_twenty %>%
  filter(!RACE %in% races_with_single_levels)
print(races_with_single_levels)
```
```{r}
# Convert categorical variables to factors again after subsetting just in case
data_twenty_filtered[categorical_vars] <- lapply(data_twenty_filtered[categorical_vars], factor)

# Check the number of levels per categorical variable within each RACE-YEAR group
race_year_levels <- data_twenty_filtered %>%
  group_by(RACE, YEAR) %>%
  summarize(across(all_of(categorical_vars), ~n_distinct(.))) %>%
  ungroup()

# Identify RACE-YEAR groups with any categorical variable having only one level
race_year_with_single_levels <- race_year_levels %>%
  filter(if_any(everything(), ~.x == 1)) 

# Display the RACE-YEAR groups with issues, if any
print(race_year_with_single_levels)

```
```{r}

# Filter out the problematic RACE-YEAR groups from the main dataset
data_twenty_filtered_final <- data_twenty_filtered %>%
  anti_join(race_year_with_single_levels, by = c("RACE", "YEAR"))

```

```{r}
# Now, with the cleaned data, fit the models
models_by_race_year <- data_twenty_filtered_final %>%
  group_by(RACE, YEAR) %>%
  do(
    model = lm(log_RENTGRS ~ log_INCTOT + KITCHEN + ROOMS + NFAMS + AGE + MARST + EMPSTAT + REGION_CLASSIFIED, data = .)
  )
```
```{r}
models_with_coef <- models_by_race_year %>%
  rowwise() %>% 
  mutate(log_INCTOT_coef = coef(model)[["log_INCTOT"]]) %>%
  ungroup() %>%
  select(RACE, YEAR, log_INCTOT_coef)

coefficients_wide <- models_with_coef %>%
  pivot_wider(names_from = RACE, values_from = log_INCTOT_coef, names_prefix = "coef_")

kable(coefficients_wide)
```
- Specific Trends:

**Alaska Native**: Shows minor fluctuations around zero, with both positive and negative coefficients, indicating inconsistent trends over the years.

**American**: This category has NA values, suggesting incomplete data, making it hard to discern a clear trend.

**Chinese**: Generally has higher positive coefficients compared to other groups, particularly noticeable in later years, indicating a strong positive association with income in those years.

**Japanese**: Has some missing values but otherwise presents mostly positive coefficients, with a notable spike in recent years.

**Islander**: Also features both positive and negative coefficients with considerable variability.

**Other race, nec**: Shows a mix of positive, negative, and NA values, making a clear trend difficult to establish.

**Two or more races**: This group generally has positive coefficients, with a few exceptions, suggesting a fairly consistent positive association with income.

**Whites**: Present a range of coefficients, mostly positive with some fluctuations, but generally indicate a positive association with income.

- Race Comparisons: Certain racial categories, like those identifying as Chinese and Japanese, tend to have higher coefficients, suggesting a stronger relationship with income than other races in the dataset. Conversely, the 'Other race, nec' category often has lower coefficients, implying a weaker association with income.
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyr)
library(ggplot2)

# Assuming 'coefficients_wide' is actually a wide-format data frame and you need to convert it to long format
# where 'YEAR' is a column in the data frame, and each race's coefficients are in separate columns
coefficients_long <- coefficients_wide %>%
  pivot_longer(cols = -YEAR, names_to = "RACE", values_to = "log_INCTOT_coef")

unique_races <- unique(coefficients_long$RACE)

# Define a nice color for the bars
bar_color <- "#2C3E50" # A deep shade of blue

# Loop through each race and create a separate plot
plots_list <- list()  # Create an empty list to store plots (if needed)
for (race in unique_races) {
  # Filter the data for the current race
  race_data <- subset(coefficients_long, RACE == race)
  
  # Create the plot
  p <- ggplot(race_data, aes(x = as.factor(YEAR), y = log_INCTOT_coef)) +
    geom_bar(stat = "identity", fill = bar_color, width = 0.7) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5), # Adjust for better label positioning
          plot.title = element_text(hjust = 0.5, face = "bold")) + 
    labs(title = paste("Income Coefficient:", race),
         x = "Year",
         y = "Coefficient")

  # Save the plot in the list
  plots_list[[race]] <- p
  
  # Print the plot
  print(p)
}
```






