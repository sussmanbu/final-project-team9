---
title: "Blog Post 7"
author: "Yating Zhu, Dingyu Guoï¼ŒSuh Edwin Jiho"
date: "2024-04-19"
date-modified: "2024-04-19"
draft: FALSE
---
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyr)
library(broom)
library(dplyr)
library(here)
library(gt)
library(purrr)
data_path <- here("dataset", "data_twenty_clean.csv")
data_path1 <- here("dataset", "latest_clean.csv")
library(readr)
data_twenty <- read_csv(data_path,show_col_types = FALSE) 
data_2022 <- read_csv(data_path1,show_col_types = FALSE) 
library(ggplot2)
library(knitr)
library(lme4)
library(broom.mixed)
library(nlme)
library(car)

```


```{r echo=FALSE, message=FALSE, warning=FALSE}
data_twenty$INCTOT <- scale(data_twenty$INCTOT, center = TRUE, scale = TRUE)
data_twenty$ROOMS <- scale(data_twenty$ROOMS, center = TRUE, scale = TRUE)
data_twenty$NFAMS <- scale(data_twenty$NFAMS, center = TRUE, scale = TRUE)
data_twenty$AGE <- scale(data_twenty$AGE, center = TRUE, scale = TRUE)
data_twenty$FTOTINC <- scale(data_twenty$FTOTINC, center = TRUE, scale = TRUE)

model_with_income <- lmer(RENTGRS ~ INCTOT + KITCHEN + ROOMS + NFAMS + AGE + MARST + RACE + EMPSTAT + FTOTINC + (1 | REGION_CLASSIFIED), data = data_twenty, REML = FALSE)
```

### Regression Coefficients Table:
```{r echo=FALSE, message=FALSE, warning=FALSE }
tidy_lm <- tidy(model_with_income)
kable(tidy_lm, format = "pipe")
```

### Model Fit Statistics Table:
```{r echo=FALSE, message=FALSE, warning=FALSE}
glance_lm <- glance(model_with_income)
kable(glance_lm, format = "pipe")
```

### Residuals and Related Statistics Table:
```{r echo=FALSE, message=FALSE, warning=FALSE}
augment_lm <- augment(model_with_income)
kable(head(augment_lm), format = "pipe")
```
- From the above tables, we observe that the term	KITCHENYes (access to kitchens) is negative in the estimate, and the variable has a large statistic, which might indicate statistic, which might indicate significance, but consider whether this variable is theoretically important for the rent price. Also AGE (Age of the renter or the rental unit): The effect size is small and the statistic value is close to zero, which may suggest it's not a strong predictor in the presence of other variables.
- Therefore we decided to remove these two variables and continue to explore the model.
### Multicollinearity concerns
```{r echo=FALSE, message=FALSE, warning=FALSE}
library(car)
vif_values <- vif(model_with_income)
kable(vif_values)
```
- we observe income and family income stands out have higher multicollinearity index than others, therefore we decide to remove family income in our model.

```{r echo=FALSE, message=FALSE, warning=FALSE}
# Calculate residuals and fitted values
residuals_twenty <- resid(model_with_income)
fitted_values_twenty <- fitted(model_with_income)

# Create a residual plot
plot(fitted_values_twenty, residuals_twenty, 
     xlab = "Fitted Values", ylab = "Residuals",
     main = "Residual Plot", pch = 20)
abline(h = 0, col = "red") 
```




## log-log model
```{r echo=FALSE, message=FALSE, warning=FALSE}
# Filter out non-positive values before log transformation
data_twenty <- data_twenty[data_twenty$RENTGRS > 0 & data_twenty$INCTOT > 0, ]

# Apply log transformation
data_twenty$log_RENTGRS <- log(data_twenty$RENTGRS)
data_twenty$log_INCTOT <- log(data_twenty$INCTOT)


# Calculating means and standard deviations for the log-transformed columns
mean_log_RENTGRS <- mean(data_twenty$log_RENTGRS, na.rm = TRUE)
sd_log_RENTGRS <- sd(data_twenty$log_RENTGRS, na.rm = TRUE)
mean_log_INCTOT <- mean(data_twenty$log_INCTOT, na.rm = TRUE)
sd_log_INCTOT <- sd(data_twenty$log_INCTOT, na.rm = TRUE)


# Defining lower and upper bounds for both variables
lb_log_RENTGRS <- mean_log_RENTGRS - 3 * sd_log_RENTGRS
ub_log_RENTGRS <- mean_log_RENTGRS + 3 * sd_log_RENTGRS
lb_log_INCTOT <- mean_log_INCTOT - 3 * sd_log_INCTOT
ub_log_INCTOT <- mean_log_INCTOT + 3 * sd_log_INCTOT

# Filtering out outliers
data_twenty_clean <- data_twenty[data_twenty$log_RENTGRS >= lb_log_RENTGRS & data_twenty$log_RENTGRS <= ub_log_RENTGRS & 
                             data_twenty$log_INCTOT >= lb_log_INCTOT & data_twenty$log_INCTOT <= ub_log_INCTOT, ]


```

```{r echo=FALSE, message=FALSE, warning=FALSE}
model_with_income_log <- lmer(log_RENTGRS ~ log_INCTOT + ROOMS + NFAMS + MARST + RACE + EMPSTAT + (1 | REGION_CLASSIFIED), data = data_twenty_clean, REML = FALSE)
```

### Regression Coefficients Table:
```{r echo=FALSE, message=FALSE, warning=FALSE }
tidy_lm <- tidy(model_with_income_log)
kable(tidy_lm, format = "pipe")
```

### Model Fit Statistics Table:
```{r echo=FALSE, message=FALSE, warning=FALSE}
glance_lm <- glance(model_with_income_log)
kable(glance_lm, format = "pipe")
```

### Residuals and Related Statistics Table:
```{r echo=FALSE, message=FALSE, warning=FALSE}
augment_lm <- augment(model_with_income_log)
kable(head(augment_lm), format = "pipe")
```



### Residual plot
```{r echo=FALSE, message=FALSE, warning=FALSE}
# Calculate residuals and fitted values
residuals_twenty_1 <- resid(model_with_income_log)
fitted_values_twenty_1 <- fitted(model_with_income_log)

# Create a residual plot
plot(fitted_values_twenty, residuals_twenty, 
     xlab = "Fitted Values", ylab = "Residuals",
     main = "Residual Plot", pch = 20)
abline(h = 0, col = "red") 
```
- The residual plot seems to have certain problem with heteroscedasticity, which is pretty normal in our model since we encountered similar problem in blog post 4. However, this is common in non-transformed data and it is our one of the limitation in our model. 
- This log-transformed model seems to perform better in terms of having residuals more consistently distributed around zero. This suggests that the log transformation helped to stabilize the variance of the residuals and improve the model's homoscedasticity.


```{r echo=FALSE, message=FALSE, warning=FALSE}
library(lattice)

# Q-Q plot for normality
qqmath(resid(model_with_income_log), distribution = qnorm,
       main = "Q-Q Plot for Model Residuals", 
       xlab = "Theoretical Quantiles", 
       ylab = "Sample Quantiles")

# Residuals vs Fitted plot for homoscedasticity
plot(residuals(model_with_income_log) ~ fitted(model_with_income_log))
abline(h = 0, col = "red")
qqPlot(resid(model_with_income_log), main = "Q-Q Plot for Model Residuals")



```
- The Q-Q plot we got for model residuals suggests similar issues with our residual plot, however, this is common and again one of our limitation of our model.
- The Q-Q plot captures the overall trend and relevant factors, despite the presence of certain outliers.
- The residuals at the lower and upper ends of the distribution deviate from the line, which indicates that the distribution of residuals has heavier tails than the normal distribution. This means there are more extreme values (outliers) than you would expect if the residuals were perfectly normally distributed.




