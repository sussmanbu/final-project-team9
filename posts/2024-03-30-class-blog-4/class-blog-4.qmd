---
title: "Class blog 4"
author: ""
date: "2024-03-30"
date-modified: "2024-03-30"
draft: FALSE
---
```{r warning=FALSE}
library(broom)
library(dplyr)
library(here)
data_path <- here("dataset", "rent_income_clean.csv")
library(readr)
rent_clean_data <- read_csv(data_path,show_col_types = FALSE) 
library(ggplot2)
```

## Roughly see the relationship between income and rent 
```{r}
ggplot(rent_clean_data, aes(x = INCTOT, y = RENTGRS)) +
  geom_point(color = 'black', alpha = 0.1)
```
-The horizontal axis represents the total income (INCTOT), which is the predictor.
-The vertical axis represents the rent paid (RENTGRS), which is the response.
-The purpose of creating this scatter plot is to assess whether there is a linear or non-linear relationship between total income and rent paid in a general way. 
-The density of the points can be seen with a darker shade, indicating a higher concentration of data points. There seems to be a large concentration of points towards the lower end of the income scale with lower rents, which suggests that a significant portion of the dataset includes individuals with lower income and rent levels.
-The plot does not clearly show a distinct linear trend, suggesting that the relationship between these variables might be non-linear 

## Simple linear model 
```{r}
lm_model <- lm(RENTGRS ~ INCTOT, data = rent_clean_data)
tidy_lm <- tidy(lm_model)
print(tidy_lm)

glance_lm <- glance(lm_model)
print(glance_lm)

augmented_data <- augment(lm_model)
print(augmented_data)
```
- The R-squared value is 0.094855, which means that approximately 9.49% of the variability in the rent paid (RENTGRS) can be explained by the total income (INCTOT). This is a relatively low R-squared value, indicating that the linear model does not explain a large portion of the variability in the rent.But it is fair, because we only include one predictor here.
- The statistic value is 63312.15, which is extremely high. This suggests that the overall significance of the model is strong, despite the low R-squared. This could be due to a large sample size, which can make even small relationships appear statistically significant.

### Residual plot
```{r}
ggplot(augmented_data, aes(x = .fitted, y = .resid)) +
  geom_point(aes(color = INCTOT), alpha = 0.5) + 
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(x = "Fitted Values", y = "Residuals", 
       title = "Residuals vs. Fitted Values") +
  theme_minimal()
```
- This diagram indicates that the spread of residuals appears to increase as the fitted values increase. This pattern indicates heteroscedasticity, which means that the variability of the residuals is not constant across levels of the predictor variable. In an ideal scenario, I'd want to see a consistent spread of residuals across all levels of fitted values, suggesting homoscedasticity.

## Multiple linear regression
```{r}
# Ensure categorical variables are treated as factors
rent_clean_data$KITCHEN <- as.factor(rent_clean_data$KITCHEN)
rent_clean_data$MARST <- as.factor(rent_clean_data$MARST)
rent_clean_data$RACE <- as.factor(rent_clean_data$RACE)
rent_clean_data$EMPSTAT <- as.factor(rent_clean_data$EMPSTAT)

# Fit the regression model with dummy variables for categorical factors
mlr_model <- lm(RENTGRS ~ INCTOT + KITCHEN + ROOMS + NFAMS + AGE + MARST + RACE + EMPSTAT + FTOTINC, data = rent_clean_data)
```
```{r}
tidy_mlr <- tidy(mlr_model)
print(tidy_mlr)

glance_mlr <- glance(mlr_model)
print(glance_mlr)

augmented_mlr <- augment(mlr_model)
print(augmented_mlr)
```
- The R-squared value is 0.2444284, indicating that about 24.44% of the variability in the dependent variable is explained by the model. This is a significant improvement over the simple linear model previously discussed, suggesting that including more variables helps explain the variance in the dependent variable more effectively.
-  The adjusted R-squared value is 0.2444019, which is very close to the R-squared value.Since the adjusted R-squared is almost identical to the R-squared, this implies that the additional predictors are indeed contributing valuable information.
-  The statistic value is 9238.626, which is very high and the p-value is 0, indicating that the model is statistically significant. It means that the likelihood of the regression results being due to chance is extremely low. 

#### Multicollinearity concerns
```{r warning=FALSE}
library(car)
vif_values <- vif(mlr_model)
print(vif_values)
```
Through the result, INCTOT (Total Income) and FTOTINC (Family Total Income) stand out as having higher multicollinearity indicators than the others. While considering the what constitutes the Family total income, it is fair multicollinearity happens. So we decide to exclude the FTOTINC in our model. With a GVIF^(1/(2*Df)) value of approximately 1.53 and FTOTINC is about 1.51, a VIF between 1 and 5 suggests moderate indication of multicollinearity.

#### Residual plot:
Heterskedasticity still exits. 



## solution: 1.take log? ---  as both response and predictor right skewed
```{r}
ggplot(rent_clean_data, aes(x = log(RENTGRS))) +
  geom_histogram(binwidth = 0.1, fill = "blue", color = "black") + 
  labs(title = "Distribution of Log of Monthly Gross Rent",
       x = "Log of Monthly Gross Rent",
       y = "Count") +
  theme_minimal()
```
# distribution after log income 
```{r}
ggplot(rent_clean_data, aes(x = log(INCTOT))) +
  geom_histogram(bins = 100, fill = "blue", color = "black") + # Keep the number of bins or adjust as needed
  theme_minimal() +
  labs(title = "Histogram of Log of Total Personal Income",
       x = "Log of Total Personal Income",
       y = "Frequency")
```

## 2: Merged data 
We consolidated datasets spanning 22 years, from 1990 to 2022, sourced from the same repositories. The approach to cleaning and processing these datasets was aligned with the methodology applied to the 2022 dataset, as previously detailed.
```{r}
library(tidyverse)
library(here)
library(dplyr)
data_path <- here("dataset-ignore", "twenty_yr_data.csv")
library(readr)
twentyyr_data <- read_csv(data_path,show_col_types = FALSE)
print(head(twentyyr_data))
```
```{r}
library(dplyr)
set.seed(123) # Setting a seed for reproducibility
twentyyr_data_clean <- sample_frac(twentyyr_data, 0.01)
twentyyr_data_clean <- twentyyr_data_clean %>%
  filter(RENTGRS != 0,  # Exclude entries with zero rent
         !is.na(RENTGRS),  # Exclude NA values for rent
         EMPSTAT %in% c("1", "2", "3"),  # Include only valid employment statuses
         KITCHEN != "0",  # Exclude entries without a kitchen
         ROOMS != "00",  # Exclude entries with invalid room counts
         !INCTOT %in% c(1, 9999999, 9999998, -1),  # Exclude specific INCTOT values
         !FTOTINC %in% c(9999998, 9999999),  # Exclude specific FTOTINC values
         POVERTY != 0,  # Exclude invalid poverty codes
         !REGION %in% c(91, 92, 97, 99))  # Exclude specific region/state codes
```
```{r}
write_csv(twentyyr_data_clean, file = here("dataset", "twentyyear_rent.csv"))
saveRDS(twentyyr_data_clean, file = here("dataset", "twentyyear_rent.rds"))
```
```{r}
twentyyr_data_clean$REGION_CLASSIFIED <- case_when(
  twentyyr_data_clean$REGION %in% c(11, 12, 13) ~ "NORTHEAST",
  twentyyr_data_clean$REGION %in% c(21, 22, 23) ~ "MIDWEST",
  twentyyr_data_clean$REGION %in% c(31, 32, 33, 34) ~ "SOUTH",
  twentyyr_data_clean$REGION %in% c(41, 42, 43) ~ "WEST",
  TRUE ~ "OTHER"
)
```
```{r}
#KITCHEN
twentyyr_data_clean <- twentyyr_data_clean %>%
  mutate(KITCHEN = case_when(
    KITCHEN == "0" ~ "N/A",
    KITCHEN == "1" ~ "No",
    KITCHEN == "2" ~ "No, or shared use",
    KITCHEN == "3" ~ "Yes, shared use",
    KITCHEN == "4" ~ "Yes (shared or exclusive use)",
    KITCHEN == "5" ~ "Yes, exclusive use",
    TRUE ~ as.character(KITCHEN)
  ))
twentyyr_data_clean$KITCHEN <- as.factor(twentyyr_data_clean$KITCHEN)
```
```{r}
#MARST
twentyyr_data_clean <- twentyyr_data_clean %>%
  mutate(MARST = case_when(
    MARST == "1" ~ "Married, spouse present",
    MARST == "2" ~ "Married, spouse absent",
    MARST == "3" ~ "Separated",
    MARST == "4" ~ "Divorced",
    MARST == "5" ~ "Widowed",
    MARST == "6" ~ "Never married/single",
    MARST == "9" ~ "Blank, missing",
    TRUE ~ as.character(MARST)
  ))
twentyyr_data_clean$MARST <- as.factor(twentyyr_data_clean$MARST)
```
```{r}
#RACE
twentyyr_data_clean <- twentyyr_data_clean %>%
  mutate(RACE = case_when(
    RACE == "1" ~ "White",
    RACE == "2" ~ "Black/African American",
    RACE == "3" ~ "American Indian or Alaska Native",
    RACE == "4" ~ "Chinese",
    RACE == "5" ~ "Japanese",
    RACE == "6" ~ "Other Asian or Pacific Islander",
    RACE == "7" ~ "Other race, nec",
    RACE == "8" ~ "Two major races",
    RACE == "9" ~ "Three or more major races",
    TRUE ~ as.character(RACE) 
  ))
twentyyr_data_clean$RACE <- as.factor(twentyyr_data_clean$RACE)
```
```{r}
#EMPSTAT
twentyyr_data_clean <- twentyyr_data_clean %>%
  mutate(EMPSTAT = case_when(
    EMPSTAT == "1" ~ "Employed",
    EMPSTAT == "2" ~ "Unemployed",
    EMPSTAT == "3" ~ "Not in labour force",
    TRUE ~ as.character(EMPSTAT) 
  ))

twentyyr_data_clean$EMPSTAT <- as.factor(twentyyr_data_clean$EMPSTAT)
```

#### 1. extract 2022 dataset 2. take log of rentgrs and inctot and delete outliner +/- 3SD 3. lm()
```{r}
# Extracting the 2022 data
# If the correct column name is 'Year' or 'YEAR', use that instead:
data_2022 <- twentyyr_data_clean[twentyyr_data_clean$YEAR == 2022, ]


# Filter out non-positive values before log transformation
data_2022 <- data_2022[data_2022$RENTGRS > 0 & data_2022$INCTOT > 0, ]

# Apply log transformation
data_2022$log_RENTGRS <- log(data_2022$RENTGRS)
data_2022$log_INCTOT <- log(data_2022$INCTOT)

# Calculating means and standard deviations for the log-transformed columns
mean_log_RENTGRS <- mean(data_2022$log_RENTGRS, na.rm = TRUE)
sd_log_RENTGRS <- sd(data_2022$log_RENTGRS, na.rm = TRUE)
mean_log_INCTOT <- mean(data_2022$log_INCTOT, na.rm = TRUE)
sd_log_INCTOT <- sd(data_2022$log_INCTOT, na.rm = TRUE)


# Defining lower and upper bounds for both variables
lb_log_RENTGRS <- mean_log_RENTGRS - 3 * sd_log_RENTGRS
ub_log_RENTGRS <- mean_log_RENTGRS + 3 * sd_log_RENTGRS
lb_log_INCTOT <- mean_log_INCTOT - 3 * sd_log_INCTOT
ub_log_INCTOT <- mean_log_INCTOT + 3 * sd_log_INCTOT

# Filtering out outliers
data_2022_clean <- data_2022[data_2022$log_RENTGRS >= lb_log_RENTGRS & data_2022$log_RENTGRS <= ub_log_RENTGRS & 
                             data_2022$log_INCTOT >= lb_log_INCTOT & data_2022$log_INCTOT <= ub_log_INCTOT, ]
```

```{r}
# Fit the multiple linear regression model with the additional predictors
mlr_model_2022 <- lm(log_RENTGRS ~ log_INCTOT + KITCHEN + ROOMS + NFAMS + AGE + MARST + RACE + EMPSTAT, data = data_2022_clean)

```
```{r}
# Calculate residuals and fitted values
residuals_2022 <- resid(mlr_model_2022)
fitted_values_2022 <- fitted(mlr_model_2022)

# Create a residual plot
plot(fitted_values_2022, residuals_2022, 
     xlab = "Fitted Values", ylab = "Residuals",
     main = "Residual Plot", pch = 20)
abline(h = 0, col = "red") # Adds a horizontal line at 0

```






















### Twenty years trend
```{r}
median_twentyyr_data_clean <- twentyyr_data_clean %>%
  group_by(YEAR, REGION_CLASSIFIED) %>%
  summarize(median_rent = median(RENTGRS, na.rm = TRUE), .groups = 'drop') %>%
  ungroup()

ggplot(median_twentyyr_data_clean, aes(x = YEAR, y = median_rent, color = REGION_CLASSIFIED)) +
  geom_line() + 
  geom_point() + 
  theme_minimal() + 
  labs(title = "Change of Median Rent by Year",
       x = "Year",
       y = "Median Rent") +
  scale_x_continuous(breaks = unique(median_twentyyr_data_clean$YEAR))+
  theme(axis.text.x = element_text(size = 5)) 
```
#### regreesion 







